/*
 * This file is generated by jOOQ.
 */
package revolut.task.db.tables.daos;


import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.List;

import javax.annotation.Generated;
import javax.inject.Inject;
import javax.inject.Singleton;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import revolut.task.db.tables.Transfers;
import revolut.task.db.tables.records.TransfersRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Singleton // custom code
public class TransfersDao extends DAOImpl<TransfersRecord, revolut.task.db.tables.pojos.Transfers, Long> {

    /**
     * Create a new TransfersDao with an attached configuration
     */
    @Inject // custom code
    public TransfersDao(Configuration configuration) {
        super(Transfers.TRANSFERS, revolut.task.db.tables.pojos.Transfers.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Long getId(revolut.task.db.tables.pojos.Transfers object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>ID IN (values)</code>
     */
    public List<revolut.task.db.tables.pojos.Transfers> fetchById(Long... values) {
        return fetch(Transfers.TRANSFERS.ID, values);
    }

    /**
     * Fetch a unique record that has <code>ID = value</code>
     */
    public revolut.task.db.tables.pojos.Transfers fetchOneById(Long value) {
        return fetchOne(Transfers.TRANSFERS.ID, value);
    }

    /**
     * Fetch records that have <code>FROM_ACCOUNT IN (values)</code>
     */
    public List<revolut.task.db.tables.pojos.Transfers> fetchByFromAccount(Long... values) {
        return fetch(Transfers.TRANSFERS.FROM_ACCOUNT, values);
    }

    /**
     * Fetch records that have <code>TO_ACCOUNT IN (values)</code>
     */
    public List<revolut.task.db.tables.pojos.Transfers> fetchByToAccount(Long... values) {
        return fetch(Transfers.TRANSFERS.TO_ACCOUNT, values);
    }

    /**
     * Fetch records that have <code>AMOUNT IN (values)</code>
     */
    public List<revolut.task.db.tables.pojos.Transfers> fetchByAmount(BigDecimal... values) {
        return fetch(Transfers.TRANSFERS.AMOUNT, values);
    }

    /**
     * Fetch records that have <code>CURRENCY IN (values)</code>
     */
    public List<revolut.task.db.tables.pojos.Transfers> fetchByCurrency(String... values) {
        return fetch(Transfers.TRANSFERS.CURRENCY, values);
    }

    /**
     * Fetch records that have <code>DATE IN (values)</code>
     */
    public List<revolut.task.db.tables.pojos.Transfers> fetchByDate(OffsetDateTime... values) {
        return fetch(Transfers.TRANSFERS.DATE, values);
    }
}
